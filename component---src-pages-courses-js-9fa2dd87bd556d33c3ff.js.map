{"version":3,"sources":["webpack:///./src/pages/courses.js"],"names":["CoursesPage","data","courseImage","courseImageQuery","childImageSharp","fixed","lessons","lessonsQuery","courses","coursesQuery","courseTimeSeconds","lessonsCount","edges","forEach","lesson","node","frontmatter","time","string","pad","length","minutes","Math","floor","courseTime","Array","join","slice","title","className","map","course","key","id","height","width","price","to","path","level","description","pageQuery"],"mappings":"4RAQe,SAASA,EAAT,GAA8B,IAARC,EAAO,EAAPA,KAE3BC,EAAcD,EAAKE,iBAAiBC,gBAAgBC,MAErCC,EAAWL,EAAzBM,aACcC,EAAWP,EAAzBQ,aAEHC,EAAoB,EACpBC,EAAe,EAEnBL,EAAQM,MAAMC,SAAQ,SAAAC,GAClBJ,GAAqBI,EAAOC,KAAKC,YAAYC,OAC3CN,KAGN,IAGsBO,EAAQC,EAAKC,EAH/BC,EAAUC,KAAKC,MAAMb,EAAoB,IACvCc,GAEgBN,EAFUG,EAEFF,EAFU,IAELC,EAFS,GAGhC,IAAIK,MAAML,EAAO,GAAGM,KAAKP,GAAKD,GAAQS,OAAOP,GAHV,OAM/C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKQ,MAAM,YACX,yBAAKC,UAAU,4BACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,QAAd,iBAGR,yBAAKA,UAAU,uBACVrB,EAAQI,MAAMkB,KAAI,SAAAC,GAAM,OACrB,yBAAKC,IAAKD,EAAOhB,KAAKkB,GAAIJ,UAAU,mCAChC,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAKxB,MAAOH,EAAagC,OAAO,MAAMC,MAAM,UAGpD,yBAAKN,UAAU,YACX,yBAAKA,UAAU,SAASE,EAAOhB,KAAKC,YAAYoB,OAChD,kBAAC,OAAD,CAAMJ,IAAKD,EAAOhB,KAAKkB,GACjBJ,UAAU,aACVQ,GAAIN,EAAOhB,KAAKC,YAAYsB,MACjC,4BAAKP,EAAOhB,KAAKC,YAAYY,QAC9B,yBAAKC,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,yBACX,0BAAMA,UAAU,uBAAhB,eACA,yBAAKA,UAAU,IAAIlB,EAAnB,cAGR,yBAAKkB,UAAU,YACX,yBAAKA,UAAU,yBACX,0BAAMA,UAAU,uBAAhB,aACA,yBAAKA,UAAU,IAAIE,EAAOhB,KAAKC,YAAYuB,SAGnD,yBAAKV,UAAU,YACX,yBAAKA,UAAU,wBACX,0BAAMA,UAAU,uBAAhB,eACA,yBAAKA,UAAU,IAAIL,MAI/B,2BAAIO,EAAOhB,KAAKC,YAAYwB,qBAUjD,IAAMC,EAAS","file":"component---src-pages-courses-js-9fa2dd87bd556d33c3ff.js","sourcesContent":["import React from \"react\"\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport {Link, graphql} from 'gatsby'\nimport '../styles/courses.scss'\nimport Img from \"gatsby-image\";\n\nexport default function CoursesPage({data}) {\n\n    const courseImage = data.courseImageQuery.childImageSharp.fixed\n\n    const {lessonsQuery: lessons} = data\n    const {coursesQuery: courses} = data\n\n    var courseTimeSeconds = 0;\n    var lessonsCount = 0;\n\n    lessons.edges.forEach(lesson => {\n        courseTimeSeconds += lesson.node.frontmatter.time;\n        ++lessonsCount;\n    })\n\n    var minutes = Math.floor(courseTimeSeconds / 60);\n    const courseTime = str_pad_left(minutes,'0',2)+'min';\n\n    function str_pad_left(string, pad, length) {\n        return (new Array(length+1).join(pad)+string).slice(-length);\n    }\n\n    return (\n      <Layout>\n        <SEO title=\"Courses\" />\n        <div className=\"courses-header pb-5 pt-5\">\n            <div className=\"container\">\n                <h1 className=\"mb-0\">Our Courses</h1>\n            </div>\n        </div>\n        <div className=\"container mb-5 mt-5\">\n            {courses.edges.map(course => (\n                <div key={course.node.id} className=\"course pt-4 pb-4 pl-4 pr-4 mb-5\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4 mb-2\">\n                            <div className=\"course-image\">\n                                <Img fixed={courseImage} height=\"120\" width=\"120\"/>\n                            </div>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <div className=\"price\">{course.node.frontmatter.price}</div>\n                            <Link key={course.node.id}\n                                  className=\"text-white\"\n                                  to={course.node.frontmatter.path}\n                            ><h2>{course.node.frontmatter.title}</h2></Link>\n                            <div className=\"row\">\n                                <div className=\"col-md-3\">\n                                    <div className=\"level row ml-0 timing\">\n                                        <span className=\"material-icons mr-1\">description</span>\n                                        <div className=\"\">{lessonsCount} lessons</div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-3\">\n                                    <div className=\"level row ml-0 timing\">\n                                        <span className=\"material-icons mr-1\">equalizer</span>\n                                        <div className=\"\">{course.node.frontmatter.level}</div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4\">\n                                    <div className=\"row ml-0 mb-3 timing\">\n                                        <span className=\"material-icons mr-1\">access_time</span>\n                                        <div className=\"\">{courseTime}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <p>{course.node.frontmatter.description}</p>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n      </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    courseImageQuery: file(relativePath: { eq: \"courses/magento-2-for-beginners.png\" }) {\n        childImageSharp {\n          fixed(width: 120) {\n             ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    coursesQuery: allMarkdownRemark(\n      filter: { \n        frontmatter: { \n          type: {eq: \"course\"}\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            description\n            price\n            level\n          }\n        }\n      }\n    }\n    lessonsQuery: allMarkdownRemark (\n      filter: {\n        frontmatter: {\n          type: {\n            eq: \"lesson\"\n          }\n        }\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            time\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}